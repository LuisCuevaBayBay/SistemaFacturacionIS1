/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package contactos.contacto_proveedor;

import Clientes.datos;
import Conexiones.ConexionSQL;
import Empleados.RegistrarEmpleados;
import Proveedor.frm_proveedores;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.*;
/**
 *
 * @author LENOVO
 */
public final class ContactoP extends javax.swing.JFrame {

    /**
     *
     */
    final static org.apache.log4j.Logger logger = org.apache.log4j.Logger.getLogger(ContactoP.class);
    public ContactoP() {
        initComponents();
        mostrardatos("");
        PropertyConfigurator.configure("log4j.properties");
        this.setLocationRelativeTo(null);
    }

    void mostrardatos(String valor) {
        ConexionSQL cc = new ConexionSQL();
        Connection cn = cc.getConnection();
        DefaultTableModel modelo = new DefaultTableModel();

        modelo.addColumn("Id");
        modelo.addColumn("Extencion Numerica");
        modelo.addColumn("Numero Telefonico");
        modelo.addColumn("Numero Celuar");
        modelo.addColumn("Correo electronico");

        tabla3.setModel(modelo);
        String sql = "";
        if (valor.equals("")) {
            sql = "SELECT * FROM proveedor_contacto";
        } else {
            sql = "SELECT * FROM proveedor_contacto WHERE (ID_Contacto_Proveedor='" + valor + "' OR extension='" + valor + "'OR num_Telefonica='" + valor + "' OR Celular='" + valor + "'OR correo='" + valor + "')";
        }

        String[] datos = new String[5];
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                datos[3] = rs.getString(4);
                datos[4] = rs.getString(5);

                modelo.addRow(datos);
            }
            tabla3.setModel(modelo);
        } catch (SQLException ex) {
            Logger.getLogger(datos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        buscar = new javax.swing.JTextField();
        Correo = new javax.swing.JTextField();
        Celular = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla3 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        idcc = new javax.swing.JTextField();
        extencion = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        Numero_Telefonico = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        jMenuItem1.setText("Modificar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        jMenuItem2.setText("Eliminar\n");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel1.setText("Contacto Proveedor");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 11, -1, -1));

        jLabel2.setText("Número Telefónico");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 280, -1, -1));

        jLabel3.setText("Extención Númerica");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 240, -1, -1));

        jLabel4.setText("Correo Electrónico");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 320, -1, -1));

        jLabel5.setText("Número Celúlar");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 370, -1, -1));

        jButton1.setBackground(new java.awt.Color(0, 0, 204));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Guardar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 220, -1, -1));

        jButton3.setBackground(new java.awt.Color(0, 0, 204));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Mostrar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(533, 35, -1, -1));

        jButton4.setBackground(new java.awt.Color(0, 0, 204));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Buscar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(355, 35, 69, -1));

        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                buscarKeyTyped(evt);
            }
        });
        getContentPane().add(buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 36, 97, -1));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, Celular, org.jdesktop.beansbinding.ObjectProperty.create(), Correo, org.jdesktop.beansbinding.BeanProperty.create("nextFocusableComponent"));
        bindingGroup.addBinding(binding);

        Correo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CorreoKeyTyped(evt);
            }
        });
        getContentPane().add(Correo, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 320, 151, 30));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jButton1, org.jdesktop.beansbinding.ObjectProperty.create(), Celular, org.jdesktop.beansbinding.BeanProperty.create("nextFocusableComponent"));
        bindingGroup.addBinding(binding);

        Celular.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CelularKeyTyped(evt);
            }
        });
        getContentPane().add(Celular, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 360, 108, 30));

        tabla3 = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tabla3.setBackground(new java.awt.Color(0, 0, 204));
        tabla3.setForeground(new java.awt.Color(255, 255, 255));
        tabla3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabla3.setComponentPopupMenu(jPopupMenu1);
        tabla3.getTableHeader().setReorderingAllowed(false);
        tabla3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla3MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabla3);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 64, 546, 121));

        jButton5.setBackground(new java.awt.Color(0, 0, 204));
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Editar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 250, 69, -1));

        jLabel6.setText("ID Contacto");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 200, -1, -1));

        idcc.setEditable(false);
        idcc.setBackground(new java.awt.Color(204, 204, 204));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, extencion, org.jdesktop.beansbinding.ObjectProperty.create(), idcc, org.jdesktop.beansbinding.BeanProperty.create("nextFocusableComponent"));
        bindingGroup.addBinding(binding);

        idcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idccActionPerformed(evt);
            }
        });
        idcc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                idccKeyTyped(evt);
            }
        });
        getContentPane().add(idcc, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, 105, 30));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, Numero_Telefonico, org.jdesktop.beansbinding.ObjectProperty.create(), extencion, org.jdesktop.beansbinding.BeanProperty.create("nextFocusableComponent"));
        bindingGroup.addBinding(binding);

        extencion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                extencionKeyTyped(evt);
            }
        });
        getContentPane().add(extencion, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 240, 105, 30));

        jButton2.setBackground(new java.awt.Color(0, 0, 204));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Eliminar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 280, -1, -1));

        jToggleButton1.setBackground(new java.awt.Color(0, 153, 204));
        jToggleButton1.setForeground(new java.awt.Color(255, 255, 255));
        jToggleButton1.setText("Atrás");
        jToggleButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jToggleButton1MouseClicked(evt);
            }
        });
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 380, -1, -1));

        jToggleButton2.setBackground(new java.awt.Color(0, 0, 204));
        jToggleButton2.setForeground(new java.awt.Color(255, 255, 255));
        jToggleButton2.setText("Nuevo");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 310, -1, -1));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, Correo, org.jdesktop.beansbinding.ObjectProperty.create(), Numero_Telefonico, org.jdesktop.beansbinding.BeanProperty.create("nextFocusableComponent"));
        bindingGroup.addBinding(binding);

        Numero_Telefonico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Numero_TelefonicoActionPerformed(evt);
            }
        });
        Numero_Telefonico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Numero_TelefonicoKeyTyped(evt);
            }
        });
        getContentPane().add(Numero_Telefonico, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 280, 100, 30));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/verde3.jpg"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 440));

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseClicked


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ConexionSQL cc = new ConexionSQL();
        Connection cn = cc.getConnection();

        if (extencion.getText().equals("") || Numero_Telefonico.getText().equals("") || Correo.getText().equals("") || Celular.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Hay campos  vacios, debe llenar todos los campos");
            logger.debug("Dejo los campos vacios");
        } else {

            if (esEmail(Correo.getText())) {

                if (existeUsuario(idcc.getText()) == 0) {

                    if (existeCorreo(Correo.getText()) == 0) {

                        if (existeTel(Numero_Telefonico.getText()) == 0) {

                            if (existeNum(Celular.getText()) == 0) {
                                if (Numero_Telefonico.getText().length() >= 8) {
                                    if (Celular.getText().length() >= 8) {
                                        if (extencion.getText().length() >= 3) {
                                              if (Numero_Telefonico.getText().startsWith("2")) {
                                                    if(Celular.getText().startsWith("3") || Celular.getText().startsWith("8") ||Celular.getText().startsWith("9")){
                                            try {

                                                PreparedStatement pst = cn.prepareStatement("INSERT INTO `proveedor_contacto` (`ID_Contacto_Proveedor`, `extension`, `num_Telefonica`, `Celular`, `correo`) VALUES (NULL, ?, ?, ?, ?)");
                                                
                                                pst.setString(1, extencion.getText());
                                                pst.setString(2, Numero_Telefonico.getText());
                                                pst.setString(3, Celular.getText());
                                                pst.setString(4, Correo.getText());
                                                

                                                int a = pst.executeUpdate();
                                                if (a > 0) {
                                                    JOptionPane.showMessageDialog(null, "Registro exitoso");
                                                    logger.debug("Registro Exitoso");
                                                    mostrardatos("");
                                                } else {
                                                    JOptionPane.showMessageDialog(null, "Error al agregar");
                                                    logger.debug("Error al agregar");
                                                }

                                            } catch (Exception e) {

                                            }
                                        } else {
                                            JOptionPane.showMessageDialog(null, "Numero celular debe empezar 3, 8 o 9");
                                            logger.debug("Error, el numero de celular debe empezar con 3,8 o 9");

                                        }
                                              }else{
                                                  JOptionPane.showMessageDialog(null, "Numero telefonico debe empezar con 2");
                                                  logger.debug("Error, el numero de telefono no empieza con 2");
                                                  
                                              }
                                    } else {
                                        JOptionPane.showMessageDialog(null, "La extension debe ser de 3 digitos");
                                        logger.debug("Error, se ingreso una extension de menos de 3 numeros");
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "La casilla numero telefonico es de 8 caracteres");
                                    logger.debug("Error, el numero de telefono contiene menos de 8 caracteres");

                                }

                            } else {
                                JOptionPane.showMessageDialog(null, "El Numero de Celular ya existe");
                                logger.debug("Error, el numero de celular ya existe");
                            }

                        } else {
                            JOptionPane.showMessageDialog(null, "El Numero de Telefono ya existe");
                            logger.debug("Error, el numero de telefono ya esta registrado");
                        }

                    } else {
                        JOptionPane.showMessageDialog(null, "El correo ya existe");
                        logger.debug("error, el correo ya existe");

                    }

                } else {
                    JOptionPane.showMessageDialog(null, "El usuario ya existe");
                    logger.debug("Error, el id ya existe");

                }
            } else {
                JOptionPane.showMessageDialog(null, "El correo es invalido. Ejemplo: nombre.apellido@gmail.com");
                logger.debug("Mal ingreso del correo");
            }
            }
           
        }
        nuevo();

// TODO // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    public void nuevo() {
        extencion.setText("");
        idcc.setText("");
        Numero_Telefonico.setText("");
        Correo.setText("");
        Celular.setText("");

    }


    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        logger.debug("Muestra los datos de la tabla");
        mostrardatos("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        logger.debug("Busca un contacto");
        mostrardatos(buscar.getText());
    }//GEN-LAST:event_jButton4ActionPerformed

    public int existeUsuario(String usuario) {

        ResultSet rs = null;
        PreparedStatement ps = null;

        ConexionSQL cc = new ConexionSQL();
        Connection con = cc.getConnection();

        String sql = "SELECT count(ID_Contacto_Proveedor) FROM proveedor_contacto WHERE ID_Contacto_Proveedor = ?";

        try {

            ps = con.prepareStatement(sql);
            ps.setString(1, usuario);
            rs = ps.executeQuery();

            if (rs.next()) {
                return rs.getInt(1);

            }

        } catch (SQLException ex) {

            return 1;

        }
        return 1;

    }

    public int existeCorreo(String correo) {

        ResultSet rs = null;
        PreparedStatement ps = null;

        ConexionSQL cc = new ConexionSQL();
        Connection con = cc.getConnection();

        String sql = "SELECT count(ID_Contacto_Proveedor) FROM proveedor_contacto WHERE correo = ?";

        try {

            ps = con.prepareStatement(sql);
            ps.setString(1, correo);
            rs = ps.executeQuery();

            if (rs.next()) {
                return rs.getInt(1);

            }

        } catch (SQLException ex) {

            return 1;

        }
        return 1;

    }

    public int existeTel(String telefono) {

        ResultSet rs = null;
        PreparedStatement ps = null;

        ConexionSQL cc = new ConexionSQL();
        Connection con = cc.getConnection();

        String sql = "SELECT count(ID_Contacto_Proveedor) FROM proveedor_contacto WHERE num_Telefonica = ?";

        try {

            ps = con.prepareStatement(sql);
            ps.setString(1, telefono);
            rs = ps.executeQuery();

            if (rs.next()) {
                return rs.getInt(1);

            }

        } catch (SQLException ex) {

            return 1;

        }
        return 1;

    }

    public int existeNum(String num) {

        ResultSet rs = null;
        PreparedStatement ps = null;

        ConexionSQL cc = new ConexionSQL();
        Connection con = cc.getConnection();

        String sql = "SELECT count(ID_Contacto_Proveedor) FROM proveedor_contacto WHERE Celular = ?";

        try {

            ps = con.prepareStatement(sql);
            ps.setString(1, num);
            rs = ps.executeQuery();

            if (rs.next()) {
                return rs.getInt(1);

            }

        } catch (SQLException ex) {

            return 1;

        }
        return 1;

    }

    public boolean esEmail(String correo) {

        Pattern pattern = Pattern.compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)@"
                + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$");

        Matcher matcher = pattern.matcher(correo);
        return matcher.find();
    }

    String id = "";
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        int fila = tabla3.getSelectedRow();
        if (fila >= 0) {

            idcc.setText(tabla3.getValueAt(fila, 0).toString());
            extencion.setText(tabla3.getValueAt(fila, 1).toString());
            Numero_Telefonico.setText(tabla3.getValueAt(fila, 2).toString());
            Correo.setText(tabla3.getValueAt(fila, 4).toString());
            Celular.setText(tabla3.getValueAt(fila, 3).toString());
            id = tabla3.getValueAt(fila, 0).toString();

        } else {
            JOptionPane.showMessageDialog(null, "No se encontro fila");
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        ConexionSQL cc = new ConexionSQL();
        Connection cn = cc.getConnection();

        if (idcc.getText().equals("") || extencion.getText().equals("") || Numero_Telefonico.getText().equals("") || Correo.getText().equals("") || Celular.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Hay campos  vacios, debe llenar todos los campos");
        } else {

            if (esEmail(Correo.getText())) {
                if (Numero_Telefonico.getText().length() >= 8) {
                    if (Celular.getText().length() >= 8) {
                        if (extencion.getText().length() >= 3) {
                            try {
                                PreparedStatement pst = cn.prepareStatement("UPDATE proveedor_contacto SET  ID_Contacto_Proveedor='" + idcc.getText() + "'  ,extension='" + extencion.getText() + "', num_Telefonica='" + Numero_Telefonico.getText() + "',Celular='" + Celular.getText() + "',correo='" + Correo.getText() + "' WHERE ID_Contacto_Proveedor='" + id + "' ");
                                id = idcc.getText();
                                pst.executeUpdate();
                                JOptionPane.showMessageDialog(null, "Se a modificado con exito");

                                mostrardatos("");
                            } catch (Exception e) {
                                System.out.print(e.getMessage());
                            }

                        } else {
                            JOptionPane.showMessageDialog(null, "La casilla de extencion numerica es de 3 caracteres");

                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "La casilla de Numero Celular es de 8 caracteres");

                    }
                } else {
                    JOptionPane.showMessageDialog(null, "La casilla de Numero Tlefonico es de 8 caracteres");

                }
            } else {
                JOptionPane.showMessageDialog(null, "El correo es invalido. Ejemplo: nombre.apellido@gmail.com");
            }
        }
        nuevo();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        ConexionSQL cc = new ConexionSQL();
        Connection cn = cc.getConnection();
        int fila = tabla3.getSelectedRow();
        String cod = "";
        cod = tabla3.getValueAt(fila, 0).toString();
        try {
            PreparedStatement pst = cn.prepareStatement("DELETE FROM proveedor_contacto WHERE ID_Contacto_Proveedor='" + cod + "'");
            pst.executeUpdate();
            mostrardatos("");
            JOptionPane.showMessageDialog(null, "Se a eliminado con exito");
            // TODO add your handling code here:
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void idccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idccActionPerformed

    }//GEN-LAST:event_idccActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarActionPerformed
    
    
    
    public Icon icono(String path, int width, int height){
        Icon img = new ImageIcon(new ImageIcon(getClass().getResource(path)).getImage().
                getScaledInstance(width,height,java.awt.Image.SCALE_SMOOTH));
        return img;
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:\
        Object[] options = {"SI", "NO"};
         int i = JOptionPane.showOptionDialog(null, "Esta seguro que desea eliminar el registro?","Seleccione una opcion",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, icono("/Imagenes/logo.png", 40, 40),  options, options[0]);
        ConexionSQL cc = new ConexionSQL();
        Connection cn = cc.getConnection();
        int fila = tabla3.getSelectedRow();
        String cod = "";
        cod = tabla3.getValueAt(fila, 0).toString();
        if (i == 0) { 
        try {
            PreparedStatement pst = cn.prepareStatement("DELETE FROM proveedor_contacto WHERE ID_Contacto_Proveedor='" + cod + "'");
            pst.executeUpdate();
            mostrardatos("");
            JOptionPane.showMessageDialog(null, "Se a eliminado con exito");
        } catch (Exception e) {
        }
        }
        idcc.setText("");
        extencion.setText("");
        Numero_Telefonico.setText("");
        Correo.setText("");
        Celular.setText("");

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jToggleButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton1MouseClicked
        frm_proveedores p = new frm_proveedores();
        p.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jToggleButton1MouseClicked

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void idccKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idccKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
        if (idcc.getText().length() >= 5) {
            evt.consume();
        }
    }//GEN-LAST:event_idccKeyTyped

    private void extencionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_extencionKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
        if (extencion.getText().length() >= 3) {
            evt.consume();
        }
    }//GEN-LAST:event_extencionKeyTyped

    private void CelularKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CelularKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        } else if (Celular.getText().startsWith("1") || Celular.getText().startsWith("2") || Celular.getText().startsWith("4") || Celular.getText().startsWith("5") || Celular.getText().startsWith("6") || Celular.getText().startsWith("0")) {
            JOptionPane.showMessageDialog(null, "El numero de celular tiene que comenzar con 3, 7, 8 o 9");
        }
        if (Celular.getText().length() >= 8) {
            evt.consume();
        }
    }//GEN-LAST:event_CelularKeyTyped

    private void CorreoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CorreoKeyTyped
        if (Correo.getText().length() >= 40) {
            evt.consume();
        } else if (Correo.getText().length() == 39) {
            JOptionPane.showMessageDialog(null, "El limite de caracteres de es 40");

        }
    }//GEN-LAST:event_CorreoKeyTyped

    private void buscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarKeyTyped


    }//GEN-LAST:event_buscarKeyTyped

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        idcc.setText("");
        extencion.setText("");
        Numero_Telefonico.setText("");
        Correo.setText("");
        Celular.setText("");

    }//GEN-LAST:event_jToggleButton2ActionPerformed


    private void tabla3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla3MouseClicked
        int fila = tabla3.getSelectedRow();
        if (fila >= 0) {

            idcc.setText(tabla3.getValueAt(fila, 0).toString());
            extencion.setText(tabla3.getValueAt(fila, 1).toString());
            Numero_Telefonico.setText(tabla3.getValueAt(fila, 2).toString());
            Correo.setText(tabla3.getValueAt(fila, 4).toString());
            Celular.setText(tabla3.getValueAt(fila, 3).toString());
            id = tabla3.getValueAt(fila, 0).toString();

        } else {
            JOptionPane.showMessageDialog(null, "No se encontro fila");
        }
    }//GEN-LAST:event_tabla3MouseClicked

    private void Numero_TelefonicoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Numero_TelefonicoKeyTyped
        // TODO add your handling code here:
        
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        } else if (Numero_Telefonico.getText().startsWith("1") || Numero_Telefonico.getText().startsWith("3") || Numero_Telefonico.getText().startsWith("4") || Numero_Telefonico.getText().startsWith("5") || Numero_Telefonico.getText().startsWith("6") || Numero_Telefonico.getText().startsWith("7") || Numero_Telefonico.getText().startsWith("8") || Numero_Telefonico.getText().startsWith("9") || Numero_Telefonico.getText().startsWith("0")) {
            JOptionPane.showMessageDialog(null, "El numero de celular tiene que comenzar con 2");
        }
        if (Numero_Telefonico.getText().length() >= 8) {
            evt.consume();

        }


    }//GEN-LAST:event_Numero_TelefonicoKeyTyped

    private void Numero_TelefonicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Numero_TelefonicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Numero_TelefonicoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ContactoP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ContactoP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ContactoP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ContactoP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ContactoP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Celular;
    private javax.swing.JTextField Correo;
    private javax.swing.JTextField Numero_Telefonico;
    private javax.swing.JTextField buscar;
    private javax.swing.JTextField extencion;
    private javax.swing.JTextField idcc;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JTable tabla3;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
